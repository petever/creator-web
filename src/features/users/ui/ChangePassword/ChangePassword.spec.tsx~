import {describe, it, expect, beforeAll,} from "vitest";
import {ChangePassword} from "@/features/users/ui/ChangePassword/index";
import {render, renderHook} from "@testing-library/react";
import {zodResolver} from "@hookform/resolvers/zod";
import {z} from "zod";
import {useForm} from "react-hook-form";
import userEvent, {UserEvent} from "@testing-library/user-event";

describe('비밀번호 변경 페이지에 접속한다.', () => {
  let user : UserEvent
  beforeAll(() => {
    user = userEvent.setup()
  })

  it('비밀번호 변경 페이지에 올바르게 접속됨이 확인된다.', () => {
    const screen = render(<ChangePassword/>)
    const button = screen.getByRole('button')
    expect(button).toBeTruthy()
    expect(button.textContent).toBe('비밀번호 변경')
  })

  it('새 비밀번호와 비밀번호 확인 란이 동일하게 검증된다.', async () => {

    const { result } = renderHook(() => useForm({
      defaultValues: {
        oldPassword: '',
        newPassword: '',
        confirmPassword: '',
      },
      mode : 'onChange',
      resolver: zodResolver(z.object({
        oldPassword: z.string().min(6, '비밀번호는 최소 6자 이상이어야 합니다.'),
        newPassword: z.string().min(6, '비밀번호는 최소 6자 이상이어야 합니다.').regex(
          /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z0-9]).+$/,
          '비밀번호에는 최소 하나의 문자, 숫자 및 특수문자가 포함되어야 합니다.',
        ),
        confirmPassword: z.string().min(6, '비밀번호는 최소 6자 이상이어야 합니다.').regex(
          /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z0-9]).+$/,
          '비밀번호에는 최소 하나의 문자, 숫자 및 특수문자가 포함되어야 합니다.',
        ),
      }).refine((data) => data.newPassword === data.confirmPassword, {
        message: '비밀번호가 일치하지 않습니다.',
        path: ['confirmPassword'],
      })),
    }));



    console.log('result', result.current.setValue('newPassword', '1234567'))
    console.log('current', result.current.getValues('newPassword'))
  console.log('error' ,
    result.current.formState.error
  )


    await result.current.trigger();

    expect(result.current.formState.errors).toEqual({
      oldPassword: {
        type: 'min',
        message: '비밀번호는 최소 6자 이상이어야 합니다.',
      },
      newPassword: {
        type: 'min',
        message: '비밀번호는 최소 6자 이상이어야 합니다.',
      },
      confirmPassword: {
        type: 'min',
        message: '비밀번호는 최소 6자 이상이어야 합니다.',
      },
    });
  });

})

